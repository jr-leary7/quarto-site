{
  "hash": "0ab4b6fa82e879086950a11dc186a361",
  "result": {
    "markdown": "---\ntitle: \"scRNA-seq Resources\"\nauthor:\n  name: Jack Leary\n  email: j.leary@ufl.edu\n  affiliations:\n    - name: University of Florida\n      department: Biostatistics \n      city: Gainesville\n      state: FL\ndate: \"2023-01-09\"\nformat:\n  html:\n    code-fold: show\n    code-copy: true\n    code-tools: true\n    toc: true\n    self-contained: true\n    fig-format: retina\n    df-print: kable\n    link-external-newwindow: true\nexecute: \n  cache: true\n  freeze: auto\n---\n\n\n# Purpose \n\nHere I'll catalog useful papers, preprints, method vignettes, Twitter discussions, etc. that I've found helpful while learning how to process and analyze single cell RNA-seq data. When possible, I'll link to static versions of things in the hopes that links don't break. I'll categorize resources according to which problem they address e.g., raw data processing, clustering, visualization, etc., though some resources will of course touch on multiple topics.  \n\n# Introductory Guides \n\n- [Orchestrating Single Cell Analysis with Bioconductor](http://bioconductor.org/books/release/OSCA/)\n  - This book is a thoroughly comprehensive guide on using Bioconductor tools built around the `SingleCellExperiment` data structure to perform scRNA-seq analysis. It covers basic & advanced versions everything from quality control to many different types of downstream analyses in both the single- and multi-sample cases. \n  \n- [`Seurat` guided clustering tutorial](https://satijalab.org/seurat/articles/pbmc3k_tutorial.html)\n  - The famous `Seurat` PBMC3k vignette that everyone has looked at at least once. Useful for beginners to get an idea of how `Seurat` works, but glosses over a ton of details & makes things look perhaps a bit too easy. \n\n# Processing Raw Reads \n\n- [10XGenomics `cellranger` documentation](https://support.10xgenomics.com/single-cell-gene-expression/software/pipelines/latest/installation)\n  - Shows how to use the official `cellranger` pipeline maintained by 10X to turn your raw reads into a gene-cell counts matrix. \n\n- [Quantifying unspliced & spliced RNA with `alevin-fry`](https://combine-lab.github.io/alevin-fry-tutorials/2021/alevin-fry-velocity/)\n  - Use this pipeline if you want to perform RNA velocity analysis, or just want to have your read counts quantified by spliced / unspliced / ambiguous status (called `USA` mode in the documentation).\n\n- [`kallisto | bustools` documentation](https://www.kallistobus.tools)\n  - This command line tool & Python downstream analysis suite are maintained by the Pachter Lab and are very well-written. This framework also allows for unspliced vs. spliced RNA count quantification, which is necessary to run RNA velocity. I would recommend reading through the docs just for the tips on scRNA-seq analysis even if you don't end up using the tool. \n\n# Quality Control \n\n- [Vignette for `Seurat` cell cycle score](https://satijalab.org/seurat/articles/cell_cycle_vignette.html)\n  - Uses regression to assign a S- and G2M-phase score to each cell based on human cell cycle genes from [this 2019 paper](https://doi.org/10.1126/science.aad0501). \n\n# Normalization \n\n- [`SCnorm`: Robust normalization of single cell data](https://doi.org/10.1038/nmeth.4263)\n\n- [Normalization and variance stabilization of single-cell RNA-seq data using regularized negative binomial regression](https://doi.org/10.1186/s13059-019-1874-1)\n  - This paper details `SCTransform`, a Satija Lab method for normalization that uses regularized negative binomial GLMs to model gene expression variance while accounting for overdispersion & sharing information across genes. There's been some controversy over where this method is actually that good, such as [this paper](http://dx.doi.org/10.1186/s13059-021-02451-7) which posits that the `SCTransform` model is overspecified, and recommends the usage of GLM-PCA as proposed [here](https://doi.org/10.1186/s13059-019-1861-6). \n  - [Original `SCTransform` vignette ](https://satijalab.org/seurat/articles/sctransform_vignette.html) & [`SCTransform` V2 vignette](https://satijalab.org/seurat/articles/sctransform_v2_vignette.html) with methodological improvements. \n\n# Integration \n\n# Clustering \n\n# Annotation \n\n# Dimension Reduction & Visualization \n\n# Trajectory Inference & RNA Velocity \n\n## Pseudotime-based Tools\n\n## RNA Velocity-based Tools \n\n- [RNA velocity unravaled](https://doi.org/10.1371/journal.pcbi.1010492)\n\n- [On the mathematics of RNA velocity I: Theoretical analysis](https://doi.org/10.4208/csiam-am.SO-2020-0001)\n\n# Differential Expression \n\n# Pathway Analysis \n\n- [Variance-adjusted Mahalanobis (VAM): a fast and accurate method for cell-specific gene set scoring](https://doi.org/10.1093/nar/gkaa582)\n   - `VAM` is an easy-to-use method for assigning each cell in a sample a score bounded on $[0, 1]$ for a user-provided gene set of interest. It's conveniently wrapped around the `Seurat` framework, and I've found it to be accurate & useful in my single cell work. In addition, the author was very helpful when I reached out to him with some questions when I was first starting out. Vignettes can be found [here](https://hrfrost.host.dartmouth.edu/VAM/). \n\n# Simulation\n\n# Computational Efficiency & Scalability \n\n- [Parallelization in `Seurat` vignette](https://satijalab.org/seurat/articles/future_vignette.html)\n  - Shows usage of the `future` R package to improve tasks such as normalization, integration, clustering, & differential expression. \n\n# Miscellaneous \n\n",
    "supporting": [
      "scRNAseq_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}